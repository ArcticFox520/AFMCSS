#!/bin/env bash
black="\e[30m"
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
blue="\033[34m"
purple="\033[35m"
cyan="\033[36m"
white="\033[37m"
background="\033[0m"

export red="\033[31m"
export green="\033[32m"
export yellow="\033[33m"
export blue="\033[34m"
export purple="\033[35m"
export cyan="\033[36m"
export white="\033[37m"
export background="\033[0m"

if [ $(command -v apt) ];then
    pkg_install="apt install -y"
elif [ $(command -v yum) ];then
    pkg_install="yum install -y"
elif [ $(command -v dnf) ];then
    pkg_install="dnf install -y"
elif [ $(command -v pacman) ];then
    pkg_install="pacman -S --noconfirm --needed"
elif [ $(command -v pkg) ];then
    pkg_install="pkg install -y"
fi

function pkg_install(){
i=0
echo -e ${yellow}安装软件 ${pkg}${background}
until ${pkg_install} ${pkg}
do
    if [ ${i} -eq 3 ]
        then
            echo -e ${red}错误次数过多 退出${background}
            exit
    fi
    i=$((${i}+1))
    echo -en ${red}命令执行失败 ${green}3秒后重试${background}
    sleep 3s
    echo
done
}

pkg_list=("tar" \
"gzip" \
"pv" \
"wget" \
"curl" \
"unzip" \
"git" \
"tmux" \
"jq" \
"ncat")

for package in ${pkg_list[@]}
do
    if [ -x "$(command -v pacman)" ];then
        if ! pacman -Qi "${package}" > /dev/null 2>&1;then
            pkg="${package} ${pkg}" 
        fi
    elif [ -x "$(command -v apt)" ];then
        if ! dpkg -s "${package}" > /dev/null 2>&1;then
            pkg="${package} ${pkg}"
        fi
    elif [ -x "$(command -v yum)" ];then
        if ! yum list installed "${package}" > /dev/null 2>&1;then
            pkg="${package} ${pkg}"
        fi
    elif [ -x "$(command -v dnf)" ];then
        if ! dnf list installed "${package}" > /dev/null 2>&1;then
            pkg="${package} ${pkg}"
        fi
    elif [ -x "$(command -v pkg)" ];then
        if ! dpkg -s "${package}" > /dev/null 2>&1;then
            pkg="${package} ${pkg}"
        fi
    fi
done

if [ ! -z "${pkg}" ];then
    if [ -x "$(command -v pacman)" ];then
        pacman -Syy
        pkg_install
    elif [ -x "$(command -v apt)" ];then
        apt update -y
        pkg_install
    elif [ -x "$(command -v yum)" ];then
        yum makecache -y
        pkg_install
    elif [ -x "$(command -v dnf)" ];then
        dnf makecache -y
        pkg_install
    elif [ -x "$(command -v pkg)" ];then
        pkg update -y
        pkg_install
    fi
fi

URL="https://ipinfo.io"
Address=$(curl -sL ${URL} | sed -n 's/.*"country": "\(.*\)",.*/\1/p')
if [ "${Address}" = "CN" ]
then
  # 免费提供 请勿滥用
  GitMirror="https://ghproxy.arcticfox.top/https://github.com"
else
  GitMirror="https://github.com"
fi

echo -e ${blue}[${green}*${blue}] 正在克隆 ${yellow} AFMCSS${background}
if git clone --depth=1 -b main ${GitMirror}/ArcticFox520/AFMCSS
then
  echo -e ${blue}[${green}*${blue}] ${cyan}克隆完成.${background}
else
  echo -e ${blue}[${red}*${blue}] ${cyan}克隆失败.${background}
  exit
fi


AFHOME="$(cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd)"
AFHOME=$AFHOME/AFMCSS
OldHOME=$(grep AFHOME $AFHOME/Manage/config)
sed -i "s|$OldHOME|AFHOME=$AFHOME|g" $AFHOME/Manage/config
echo -e ${blue}[${green}*${blue}] AFMCSS根目录已更改为 ${yellow}$AFHOME${background}
Command="bash $AFHOME/Manage/Main.sh $AFHOME"
if [ -e /usr/local/bin/afmc ];then
  rm /usr/local/bin/afmc
fi
touch /usr/local/bin/afmc
echo ${Command} > /usr/local/bin/afmc
chmod +x /usr/local/bin/afmc