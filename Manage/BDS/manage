#!/bin/env bash
AFHOME=$1
source $AFHOME/Manage/config
MCversion=$(cat version)
ServerName=$2
config=$AFHOME/Manage/config
StartSoftware=$(grep StartSoftware ${config} | sed 's/StartSoftware=//g')
StartSoftwarePath=$AFHOME/Manage/StartSoftware
ServerPropertiesPath=$AFHOME/Manage/BDS/ServerProperties.json

BDSServerConfig(){
OPTIONS=
local Num=$(jq '. | length' ${ServerPropertiesPath})
local Num=$(expr ${Num} - 1)
for ((i=0; i<=${Num}; i++))
do
  local ConfigurationName=$(jq .[${i}].ConfigurationName ${ServerPropertiesPath} | sed 's|"||g')
  local OPTIONS="${OPTIONS} $(expr ${i} + 1) ${ConfigurationName}"
  local OPTIONS=$(echo ${OPTIONS} | sed 's|"||g')
done
ScreenSizeMenu
Number=$(whiptail \
--title "MC-SM" \
--menu "服务器版本: ${MCversion}" \
${HEIGHT} ${WIDTH} ${OPTION} \
${OPTIONS} \
3>&1 1>&2 2>&3)
feedback=$?
if [ ${feedback} == 1 ]
then
  exit
fi

GrepConfig(){
grep "^${ConfigurationItem}=" server.properties
}
ConfigCheck(){
if ! GrepConfig > /dev/null 2>&1
then
  ScreenSizeMsgbox
  whiptail --title "MC-SM" \
  --msgbox "[错误] 配置项不存在" ${HEIGHT} ${WIDTH}
  return
fi
}
ConfigInput(){
OPTIONS=
ConfigCheck
ScreenSizeMsgbox
HEIGHT=$(expr $HEIGHT + 2)
local OldConfig=$(GrepConfig)
local state=$(GrepConfig | awk -F'=' '{print $2}')
local InputData=$(whiptail \
--title "MC-SM" \
--inputbox "${Description}\n当前设置: [${state}]\n请输入内容" \
${HEIGHT} ${WIDTH} \
3>&1 1>&2 2>&3)
feedback=$?
if [ ${feedback} == 1 ]
then
  return
fi
if [[ "${type}" == "String" ]]
then
  if [ -z ${InputData} ]
  then
    ScreenSizeMsgbox
    whiptail --title "MC-SM" \
    --msgbox "[错误] 配置项填写不规范" ${HEIGHT} ${WIDTH}
    return
  fi
elif [[ "${type}" =~ "Number" ]]
then
  if [[ ! ${InputData} =~ ^[0-9]+$ ]]
  then
    ScreenSizeMsgbox
    whiptail --title "MC-SM" \
    --msgbox "[错误] 配置项填写不规范" ${HEIGHT} ${WIDTH}
    return
  fi
else
  ScreenSizeMsgbox
  whiptail --title "MC-SM" \
  --msgbox "[错误] 配置项填写不规范" ${HEIGHT} ${WIDTH}
  return
fi
NewConfig="${ConfigurationItem}=${InputData}"
sed -i "s/${OldConfig}/${NewConfig}/g" server.properties
}
ConfigBoolean(){
OPTIONS=
ConfigCheck
local OldConfig=$(GrepConfig)
if [[ ${OldConfig} == *"true" ]]
then
  local state="已开启"
elif [[ ${OldConfig} == *"false" ]]
then
  local state="已关闭"
else
  ScreenSizeMsgbox
  whiptail --title "MC-SM" \
  --msgbox "[错误] 配置项填写不规范" ${HEIGHT} ${WIDTH}
  return
fi
ScreenSizeMsgbox
HEIGHT=$(expr $HEIGHT + 1)
if (whiptail --title "MC-SM" \
--yes-button "开启" \
--no-button "关闭" \
--yesno "${Description}\n当前状态: [${state}]" \
${HEIGHT} ${WIDTH})
then
  NewConfig="${ConfigurationItem}=true"
  sed -i "s/${OldConfig}/${NewConfig}/g" server.properties
else
  NewConfig="${ConfigurationItem}=false"
  sed -i "s/${OldConfig}/${NewConfig}/g" server.properties
fi
}
ConfigOptions(){
OPTIONS=
local Number=$1
ConfigCheck
local OldConfig=$(GrepConfig)
local state=$(GrepConfig | awk -F'=' '{print $2}')
echo ${Number}
local Num=$(jq ".[${Number}].Options | length" ${ServerPropertiesPath})
for ((i=0; i<${Num}; i++))
do
  local Options=$(jq ".[${Number}].Options[${i}]" ${ServerPropertiesPath})
  local OPTIONS="${OPTIONS} ${i} ${Options}"
done
local OPTIONS=$(echo ${OPTIONS} | sed 's|"||g')
ScreenSizeMenu
local Num=$(whiptail \
--title "MC-SM" \
--menu "${Description} 当前: [${state}] ${MCversion}" \
${HEIGHT} ${WIDTH} ${OPTION} \
${OPTIONS} \
3>&1 1>&2 2>&3)

local Config=$(jq ".[${Num}].Options[${Number}]" ${ServerPropertiesPath} | sed 's/"//g')
NewConfig="${ConfigurationItem}=${Config}"
sed -i "s/${OldConfig}/${NewConfig}/g" server.properties
}

Number=$(expr ${Number} - 1)
ConfigurationItem=$(jq .[${Number}].ConfigurationItem ${ServerPropertiesPath} | sed 's/"//g')
type=$(jq .[${Number}].type ${ServerPropertiesPath} | sed 's/"//g')
Description=$(jq .[${Number}].Description ${ServerPropertiesPath} | sed 's/"//g')

if [[ "${type}" == "Boolean" ]]
then
  ConfigBoolean
elif [[ "${type}" == "Options" ]]
then
  ConfigOptions ${Number}
else
  ConfigInput
fi
}

StartCheck(){
Port=$(grep server-port= server.properties | awk -F'=' '{print $2}')
ScreenSizeMsgbox
if bash ${StartSoftwarePath} ${StartSoftware} list 2>&1 | grep -q ${ServerName} > /dev/null 2>&1
then
  if ncat -z -w 1 127.0.0.1 ${Port} -u
  then
    return 0
  else
    whiptail --title "MC-SM" \
    --msgbox "${StartSoftware} [被占用]" \
    ${HEIGHT} ${WIDTH}
    return 1
  fi
elif ncat -z -w 1 127.0.0.1 ${Port} -u
then
  if bash ${StartSoftwarePath} ${StartSoftware} list 2>&1 | grep -q ${ServerName} > /dev/null 2>&1
  then
    return 0
  else
    whiptail --title "MC-SM" \
    --msgbox "端口: ${Port} [被占用]" \
    ${HEIGHT} ${WIDTH}
    return 1
  fi
else
  return 2
fi
}

WaitingProgressBar(){
  i=0
  ScreenSizeMsgbox
  Port=$(grep 'server-port=' server.properties | awk -F'=' '{print $2}')
  i=0
  {
    until ncat -uzw 0.1 127.0.0.1 ${Port} &> /dev/null
    do
      echo ${i}
      ((i++))
      sleep 0.4s
    done
  } | whiptail --title "MC-SM" --gauge "服务器正在启动" ${HEIGHT} ${WIDTH} 0
}

BDSMENU(){
ScreenSizeMenu
Number=$(whiptail \
--title "MC-SM" \
--menu "服务器版本: ${MCversion}" \
${HEIGHT} ${WIDTH} ${OPTION} \
"1" "🍀 启动服务器" \
"2" "🌵 进入控制台" \
"3" "🍁 配置服务器" \
"4" "🌼 备份服务器" \
"5" "🌷 卸载服务器" \
"0" "🍥 返回主菜单" \
3>&1 1>&2 2>&3)
feedback=$?
if [ ${feedback} == 1 ]
then
  return 3
fi
case ${Number} in
1)
  StartCheck
  if [ $? == 2 ]
  then
    ARCH=$(uname -m)
    case "$ARCH" in
      aarch64|arm64|armv8|armv9)
      Command="cd $AFHOME/Server/${ServerName} && box64 bedrock_server"
      bash ${StartSoftwarePath} ${StartSoftware} start ${ServerName} "${Command}"
      ;;
      x86_64|x64|amd64)
      Command="cd $AFHOME/Server/${ServerName} && bedrock_server"
      bash ${StartSoftwarePath} ${StartSoftware} start ${ServerName} "${Command}"
      ;;
    esac
    WaitingProgressBar
    ScreenSizeMsgbox
    whiptail --title "MC-SM" \
    --msgbox "${ServerName} 启动完成" \
    ${HEIGHT} ${WIDTH}
  elif [ $? == 2 ]
  then
    whiptail --title "MC-SM" \
    --msgbox "${ServerName} [已启动]" \
    ${HEIGHT} ${WIDTH}
  fi
  ;;
2)
  StartCheck
  if [ $? == 0 ]
  then
    bash ${StartSoftwarePath} ${StartSoftware} log ${ServerName}
  elif [ $? == 2 ]
    whiptail --title "MC-SM" \
    --msgbox "${ServerName} [未启动]" \
    ${HEIGHT} ${WIDTH}
  fi
  ;;
3)
  BDSServerConfig
  ;;
4)
  ScreenSizeMenu
  Number=$(whiptail \
  --title "MC-SM" \
  --menu "服务器版本: ${MCversion}" \
  ${HEIGHT} ${WIDTH} ${OPTION} \
  "1" "🍀 完整备份" \
  "2" "🌵 存档备份" \
  "3" "🍁 配置备份" \
  3>&1 1>&2 2>&3)
  feedback=$?
  if [ ${feedback} == 1 ]
  then
    return
  fi
  case ${Number} in
  1)
    echo -e ${blue}[${green}*${blue}] ${cyan}开始备份${background}
    Path=$(pwd)
    cd ..
    ZipName="$(date +%Y%m%d)-${ServerName}-Full"
    tar cf - ${ServerName} | gzip > ${ZipName}.tar.gz
    echo -e ${blue}[${green}*${blue}] ${cyan}打包完成${background}
  ;;
  2)
    echo -e ${blue}[${green}*${blue}] ${cyan}开始备份${background}
    ZipName="$(date +%Y%m%d)-${ServerName}-Worlds"
    tar cf - worlds | gzip > ${ZipName}.tar.gz
    echo -e ${blue}[${green}*${blue}] ${cyan}打包完成${background}
  ;;
  3)
    echo -e ${blue}[${green}*${blue}] ${cyan}开始备份${background}
    mkdir Config
    cp -f server.properties Config/server.properties
    cp -f allowlist.json Config/allowlist.json
    cp -f permissions.json Config/permissions.json
    ZipName="$(date +%Y%m%d)-${ServerName}-Config"
    tar cf - Config | gzip > ${ZipName}.tar.gz
    echo -e ${blue}[${green}*${blue}] ${cyan}打包完成${background}
    rm -rf Config
    ;;
  esac
  if [ -d /sd/Download ]
  then
    if [ ! -d /sd/Download/AFBackup ]
    then
      mkdir /sd/Download/AFBackup
    fi
    BackupPath="/sd/Download/AFBackup/${ZipName}.tar.gz"
  elif [ -d /sdcard/Download ]
  then
    if [ ! -d /sdcard/Download/AFBackup ]
    then
      mkdir /sdcard/Download/AFBackup
    fi
    BackupPath="/sdcard/Download/AFBackup/${ZipName}.tar.gz"
  elif [ -d /storage/emulated/0/Download ]
  then
    if [ ! -d /storage/emulated/0/Download ]
    then
      mkdir /storage/emulated/0/Download/AFBackup
    fi
    BackupPath="/sdcard/Download/AFBackup/${ZipName}.tar.gz"
  else
    if [ ! -d $AFHOME/AFBackup ]
    then
      mkdir $AFHOME/AFBackup
    fi
    BackupPath="${AFHOME}/${ZipName}.tar.gz"
  fi
  mv -f ${ZipName}.tar.gz ${BackupPath}
  echo -e ${blue}[${green}*${blue}] ${cyan}已备份至 ${yellow}${BackupPath}${background}
  cd ${Path}
  whiptail --title "MC-SM" \
  --msgbox "备份完成" \
  ${HEIGHT} ${WIDTH}
  ;;
5)
  ScreenSizeMsgbox
  if ServerName=$(whiptail --title "卸载服务器"  \
  --yes-button "确认" \
  --no-button "返回" \
  --yesno "是否确认卸载服务器?" ${HEIGHT} ${WIDTH} \
  3>&1 1>&2 2>&3)
  then
    echo -e ${blue}[${red}*${blue}] 倒数${cyan} ${yellow}3${BackupPath}${background}
    sleep 1s
    echo -e ${blue}[${red}*${blue}] 倒数${cyan} ${yellow}2${BackupPath}${background}
    sleep 1s
    echo -e ${blue}[${red}*${blue}] 倒数${cyan} ${yellow}1${BackupPath}${background}
    sleep 1s
    cd $AFHOME
    rm -rf $AFHOME/Server/${ServerName} > /dev/null 2>&1
    ScreenSizeMsgbox
    whiptail --title "MC-SM" \
    --msgbox "卸载完成" \
    ${HEIGHT} ${WIDTH}
  fi
  ;;
0)
  exit
  ;;
esac
}
function LoopMenu(){
while true
do
  BDSMENU
  feedback=$?
  if [ ${feedback} == 3 ]
  then
    exit
  fi
  LoopMenu
done
}
LoopMenuthen
    exit
  fi
  LoopMenu
done
}
LoopMenuENU
  feedback=$?
  if [ ${feedback} == 3 ]
  then
    exit
  fi
  LoopMenu
done
}
LoopMenuu